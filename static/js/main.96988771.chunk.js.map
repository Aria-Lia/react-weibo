{"version":3,"sources":["containers/home/style.less","containers/frame/TopNavBar.jsx","containers/frame/SideNav.jsx","containers/frame/Layout.jsx","containers/settings/index.jsx","containers/timeline/index.jsx","components/CardView/index.jsx","containers/home/RedirectBox.jsx","containers/home/index.jsx","router/index.jsx","redux/actions/index.jsx","redux/actions/type.jsx","App.js","redux/reducers/appData.jsx","redux/reducers/credentialData.jsx","utils/index.jsx","redux/reducers/index.jsx","redux/index.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TopNavBar","handleSelect","key","basePath","_this","props","history","push","_this2","this","react_default","a","createElement","Fragment","Navbar_default","className","variant","Nav_default","onSelect","Link","eventKey","Component","connect","state","ownProps","appData","withRouter","navKeys","SideNav","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","currentKey","setState","concat","_this3","map","e","Layout","children","frame_TopNavBar","Container_default","fluid","Row_default","Col_default","md","frame_SideNav","Settings","Timeline","CardView","_this$props","size","style","Card_default","RedirectBox","authUrl","components_CardView","Button_default","block","href","Home","home_RedirectBox","MainRouter","react_router","exact","path","component","getAccessTokenSuccess","data","type","getAccessTokenFailure","error","getAccessTokenStarted","App","authorizeToken","getAccessToken","frame_Layout","router","credentialData","dispatch","getState","_getState","url","ACCESS_TOKEN_URL","clientId","redirectUrl","axios","post","then","response","catch","message","initialState","logoutUrl","arguments","length","undefined","URL","window","location","codeIndex","indexOf","slice","localStorage","setItem","getItem","getAuthorizeToken","isFetchingAccessToken","accessToken","action","objectSpread","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","Boolean","hostname","match","ReactDOM","render","es","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.96988771.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/style.23d7c02f.less\";","import React, { Component } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { connect } from 'react-redux'\r\n\r\nclass TopNavBar extends Component {\r\n  handleSelect = (key) => {\r\n    const {basePath} = this.props\r\n    switch (key) {\r\n      case \"home\":\r\n      this.props.history.push(basePath);\r\n        break;\r\n    \r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar className=\"top-nav-bar\" variant=\"dark\">\r\n          {/* <Navbar.Brand href=\"#\" className=\"mr-auto nav-bar-brand\">\r\n            <span>React</span>-Weibo\r\n          </Navbar.Brand> */}\r\n          <Nav onSelect={key => this.handleSelect(key)}>\r\n            <Nav.Link className=\"mr-auto nav-bar-brand\" eventKey=\"home\">\r\n              <span className={\"brand-1\"}>React-</span><span className={\"brand-2\"}>Weibo</span>\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  basePath: state.appData.basePath\r\n})\r\n\r\nexport default connect(mapStateToProps)(withRouter(TopNavBar))","import React, { Component } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\nconst navKeys = [\"Timeline\", \"Settings\"]\r\nclass SideNav extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      currentKey: null,\r\n    }\r\n  }\r\n\r\n  handleSelect(key) {\r\n    const {basePath} = this.props\r\n    this.setState({\r\n      currentKey: key\r\n    }, () => {\r\n      this.props.history.push(`${basePath}/${key}`);\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {currentKey} = this.state\r\n    \r\n    return (\r\n      <Nav className={\"flex-column side-nav\"} onSelect={key => this.handleSelect(key)}>\r\n        {\r\n          navKeys.map(e => {\r\n            return (\r\n              <Nav.Link \r\n                className={currentKey === e ? \"side-nav-item-active\" : \"side-nav-item\"} \r\n                eventKey={e} \r\n                key={e}\r\n              >\r\n                {e}\r\n              </Nav.Link>\r\n            )\r\n          })\r\n        }\r\n      </Nav>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  basePath: state.appData.basePath\r\n})\r\n\r\nexport default connect(mapStateToProps)(withRouter(SideNav))","import React, { Component } from 'react';\r\nimport TopNavBar from './TopNavBar'\r\nimport SideNav from './SideNav'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport './style.css'\r\n\r\nclass Layout extends Component {\r\n\r\n  render() {\r\n    const {children} = this.props\r\n    \r\n    return (\r\n      <>\r\n        <TopNavBar />\r\n\r\n        <Container fluid={true}>\r\n          <Row>\r\n            <Col md={2} className=\"side-nav-col-1\">\r\n              <SideNav />\r\n            </Col>\r\n            <Col className=\"side-nav-col-2\">\r\n              {children}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout","import React, { Component } from 'react';\r\n\r\nclass Settings extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        Settings\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Settings","import React, { Component } from 'react';\r\n// import { connect } from 'react-redux';\r\n\r\nclass Timeline extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        TimeLine\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Timeline","import React, { Component } from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport './style.css'\r\n\r\nclass CardView extends Component {\r\n\r\n  render() {\r\n    const {children, size, style} = this.props\r\n    return (\r\n      <Card className={`card-view card-view-${size}`} style={style}>\r\n        {children}\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CardView","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { connect } from 'react-redux'\r\nimport CardView from '../../components/CardView/index'\r\n\r\nclass RedirectBox extends Component {\r\n\r\n  render() {\r\n    const {authUrl} = this.props\r\n    return (\r\n      <>\r\n        <CardView size='medium'>\r\n          <h2>Welcome to React-Weibo</h2>\r\n          <Button \r\n            variant=\"light\" \r\n            size=\"sm\" \r\n            block \r\n            className={\"login-button\"} \r\n            href={authUrl}\r\n          >\r\n            Login Page\r\n          </Button>\r\n        </CardView>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  authUrl: state.appData.authUrl\r\n})\r\n\r\nexport default connect(mapStateToProps)(RedirectBox)","import React, { Component } from 'react';\r\nimport RedirectBox from './RedirectBox'\r\nimport './style.less'\r\n\r\nclass Home extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"right-content\">\r\n        <RedirectBox />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\n/**\r\n * Import Components\r\n */\r\nimport Settings from '../containers/settings/index'\r\nimport Timeline from '../containers/timeline/index'\r\nimport Home from '../containers/home/index'\r\n\r\nclass MainRouter extends Component {\r\n\r\n  render() {\r\n    const {basePath} = this.props\r\n    return (\r\n      <Switch>\r\n        <Route exact path={basePath} component={Home}/>\r\n        <Route path={`${basePath}/timeline`} component={Timeline}/>\r\n        <Route path={`${basePath}/settings`} component={Settings}/>\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  basePath: state.appData.basePath\r\n})\r\n\r\nexport default connect(mapStateToProps)(MainRouter)","import * as type from './type'\r\nimport axios from 'axios'\r\nimport {ACCESS_TOKEN_URL} from '../../utils/urls'\r\n\r\n/**\r\n * Action Creators\r\n */\r\nexport const getAccessToken = () => {\r\n    return (dispatch, getState) => {\r\n    dispatch(getAccessTokenStarted)\r\n    const {appData, credentialData} = getState()\r\n    const {clientId, redirectUrl} = appData\r\n    const {authorizeToken} = credentialData\r\n    const client_secret = process.env.REACT_APP_OPEN_WEIBO_API_KEY\r\n    const url = \r\n      ACCESS_TOKEN_URL\r\n      + \"?client_id=\" + clientId\r\n      + \"&client_secret=\" + client_secret\r\n      + \"&grant_type=authorization_code\" \r\n      + \"&redirect_uri=\" + redirectUrl\r\n      + \"&code=\" + authorizeToken\r\n      \r\n    axios\r\n    .post(url, null)\r\n    .then(response => {\r\n      dispatch(getAccessTokenSuccess(response.data))\r\n    })\r\n    .catch(error => {\r\n      if (error.message)\r\n        dispatch(getAccessTokenFailure(error.message))\r\n      else\r\n        dispatch(getAccessTokenFailure(error))\r\n    })\r\n\r\n    // axios\r\n    //   .post(ACCESS_TOKEN_URL, \r\n    //     {\r\n    //       client_id: clientId,\r\n    //       client_secret: client_secret,\r\n    //       grant_type: \"authorization_code\",\r\n    //       code: authorizeToken,\r\n    //       redirect_uri: redirectUrl\r\n    //     }\r\n    //   )\r\n    //   .then(response => {\r\n    //     dispatch(getAccessTokenSuccess(response.data))\r\n    //   })\r\n    //   .catch(error => {\r\n    //     if (error.message)\r\n    //       dispatch(getAccessTokenFailure(error.message))\r\n    //     else\r\n    //       dispatch(getAccessTokenFailure(error))\r\n    //   })\r\n\r\n  }\r\n}\r\n\r\nconst getAccessTokenSuccess = data => ({\r\n  type: type.GET_ACCESS_TOKEN_SUCCESS,\r\n  data\r\n})\r\n\r\nconst getAccessTokenFailure = error => ({\r\n  type: type.GET_ACCESS_TOKEN_FAILURE,\r\n  error\r\n})\r\n\r\nconst getAccessTokenStarted = () => ({\r\n  type: type.GET_ACCESS_TOKEN_STARTED\r\n})","/**\r\n * Action Type\r\n */\r\n\r\n /**\r\n  * Access Token (Async)\r\n  */\r\nexport const GET_ACCESS_TOKEN_SUCCESS = 'GET_ACCESS_TOKEN_SUCCESS'\r\nexport const GET_ACCESS_TOKEN_FAILURE = 'GET_ACCESS_TOKEN_FAILURE'\r\nexport const GET_ACCESS_TOKEN_STARTED = 'GET_ACCESS_TOKEN_STARTED'","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport {Layout} from './containers/frame/index'\r\nimport MainRouter from './router/index'\r\nimport {getAccessToken} from './redux/actions/index'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    const {authorizeToken, getAccessToken} = this.props\r\n    \r\n    if (authorizeToken) {\r\n      getAccessToken()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={'bg-image'} />\r\n        <Layout>\r\n            <MainRouter />\r\n        </Layout>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  authorizeToken: state.credentialData.authorizeToken\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getAccessToken: () => {\r\n      dispatch(getAccessToken());\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// import * as type from '../actions/type'\r\n\r\n/**\r\n * Initial State\r\n */\r\nconst clientId = \"1237279317\"\r\nconst redirectUrl = \"https://aria-lia.github.io/react-weibo/\"\r\nconst logoutUrl = \"https://aria-lia.github.io/react-weibo/logout\"\r\nlet initialState = {\r\n  clientId: clientId,\r\n  redirectUrl: redirectUrl,\r\n  logoutUrl: logoutUrl,\r\n  authUrl: `https://api.weibo.com/oauth2/authorize?client_id=${clientId}&redirect_uri=${redirectUrl}&response_type=code`,\r\n  basePath: '/react-weibo'\r\n}\r\n\r\n/**\r\n * Reducer\r\n */\r\nconst appData = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default appData","import * as type from '../actions/type'\r\nimport {getAuthorizeToken} from '../../utils/index'\r\n\r\n/**\r\n * Initial State\r\n */\r\nconst authorizeToken = getAuthorizeToken()\r\nconst initialState = {\r\n  authorizeToken,\r\n  isFetchingAccessToken: false,\r\n  accessToken: null,\r\n  error: null\r\n}\r\n\r\n/**\r\n * Reducer\r\n */\r\nconst credentialData = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case type.GET_ACCESS_TOKEN_SUCCESS:\r\n      return {...state, \r\n        accessToken: action.data, \r\n        isFetchingAccessToken: false,\r\n        error: null\r\n      }\r\n    case type.GET_ACCESS_TOKEN_FAILURE:\r\n      return {...state, \r\n        accessToken: null, \r\n        isFetchingAccessToken: false,\r\n        error: action.error\r\n      }\r\n    case type.GET_ACCESS_TOKEN_STARTED:\r\n      return {...state, isFetchingAccessToken: true}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default credentialData","\r\nexport const getAuthorizeToken = () => {\r\n  const URL = window.location.href\r\n  if (URL) {\r\n    const tokenFlag = \"code=\"\r\n    const codeIndex = URL.indexOf(tokenFlag)\r\n    if (codeIndex !== -1) {\r\n      const authorizeToken = URL.slice(codeIndex + tokenFlag.length)\r\n      localStorage.setItem(\"authorizeToken\", authorizeToken)\r\n      return authorizeToken;\r\n    }\r\n  }\r\n  const authorizeToken = localStorage.getItem(\"authorizeToken\")\r\n  if (authorizeToken) {\r\n    return authorizeToken\r\n  }\r\n  return null;\r\n}","import { combineReducers } from 'redux'\r\nimport appData from './appData'\r\nimport credentialData from './credentialData'\r\n\r\nexport default combineReducers({\r\n  appData,\r\n  credentialData\r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index'\r\n\r\n/**\r\n * Use Redux Degugger as Enhancer\r\n * https://github.com/jhen0409/react-native-debugger/issues/280\r\n */\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\n/**\r\n * Create Store\r\n */\r\nconst store = createStore(rootReducer,\r\n  {},\r\n  composeEnhancer(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/index'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Provider store={store}><BrowserRouter><App /></BrowserRouter></Provider>\r\n  , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}